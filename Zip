/**
 * La classe Zip deriva dalla classe NBytes e permette di dividere un file in un numero di bytes scelto, per poi 
 * comprimere il risultato.
 */

package logic;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

public class Zip extends NBytes implements Runnable{
	
	public Zip(File f, int n){
		super(f, n);
		primo_carattere = "z";
	}
	
	public void run(){
		super.run();
		comprimi();
	}
	
	public void comprimi(){
		File[] filesDaComprimere = fileSplitted;
		
		try {
			for (int i=0 ; i<filesDaComprimere.length ; i++){	
				File fileDaComprimere = fileSplitted[i];
				
				String s = fileDaComprimere.getName();
				FileOutputStream fos = new FileOutputStream(path + s + ".zip");
				ZipOutputStream zos = new ZipOutputStream(fos);
				FileInputStream fis = new FileInputStream(fileDaComprimere);
				byte[] buffer = new byte[4*1024];
				
		        ZipEntry zipEntry = new ZipEntry(fileDaComprimere.getName());
		        zos.putNextEntry(zipEntry);
		        
		        int length;
		        while((length = fis.read(buffer)) >= 0) {
		            zos.write(buffer, 0, length);
		        }
		        zos.close();
		        fis.close();
		        fos.close();
		     
		        fileDaComprimere.delete();
			}
		} catch (IOException e){
			e.printStackTrace();
		}
	}
}
